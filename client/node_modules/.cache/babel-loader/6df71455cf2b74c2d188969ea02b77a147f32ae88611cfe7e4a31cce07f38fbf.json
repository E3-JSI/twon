{"ast":null,"code":"var _jsxFileName = \"/home/adbuls/social-media-app-MERN-master/client/src/pages/messenger/Messenger.js\",\n  _s = $RefreshSig$();\nimport Topbar from \"../../components/topbar/Topbar\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./messengerStyle\";\nimport ChatLeftPanel from \"../../components/chatLeftPanel/ChatLeftPanel\";\nimport CenterChatPanel from \"../../components/centerChatPanel/CenterChatPanel\";\nimport RightChatPanel from \"../../components/rightChatPanel/RightChatPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Messenger(_ref) {\n  _s();\n  let {\n    classes\n  } = _ref;\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [contact, setContact] = useState(null);\n  const {\n    user\n  } = useContext(AuthContext);\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n    console.log('connected....');\n  }, []);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  // add user to an array of Online users\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      setOnlineUsers(user.followings.filter(f => users.some(u => u.userId === f)));\n    });\n  }, [user]);\n\n  // get all conversations and display them in the left panel\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setConversations(res.data);\n        console.log(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n\n  // get the last message from each conversation\n  useEffect(() => {\n    const getLastMessages = () => {\n      try {\n        conversations.map(async c => {\n          const res = await axios.get(\"/messages/last-message/\" + c._id);\n          c.lastMessage = res.data;\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getLastMessages();\n  }, [conversations]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n\n  // get contact data\n  useEffect(() => {\n    if (currentChat) {\n      const friendId = currentChat.members.find(member => member !== user._id);\n      const getContact = async () => {\n        try {\n          const res = await axios.get(`/users?userId=${friendId}`);\n          setContact(res.data);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      getContact();\n    }\n  }, [user._id, currentChat]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messenger,\n      children: [/*#__PURE__*/_jsxDEV(ChatLeftPanel, {\n        conversations: conversations,\n        setCurrentChat: setCurrentChat,\n        user: user,\n        currentChat: currentChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CenterChatPanel, {\n        currentChat: currentChat,\n        messages: messages,\n        setNewMessage: setNewMessage,\n        newMessage: newMessage,\n        handleSubmit: handleSubmit,\n        user: user,\n        contact: contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RightChatPanel, {\n        onlineUsers: onlineUsers,\n        userId: user._id,\n        setCurrentChat: setCurrentChat,\n        contact: contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(Messenger, \"FntR+y0gY6ZdDzo2srFEUN1YFn8=\");\n_c = Messenger;\nexport default withStyles(styles)(Messenger);\nvar _c;\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["Topbar","useContext","useEffect","useRef","useState","AuthContext","axios","io","withStyles","styles","ChatLeftPanel","CenterChatPanel","RightChatPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","Messenger","_ref","_s","classes","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","contact","setContact","user","socket","current","on","data","sender","senderId","text","createdAt","Date","now","console","log","members","includes","prev","emit","_id","users","followings","filter","f","some","u","userId","getConversations","res","get","err","getLastMessages","map","c","lastMessage","getMessages","friendId","find","member","getContact","handleSubmit","e","preventDefault","message","conversationId","receiverId","post","children","fileName","_jsxFileName","lineNumber","columnNumber","className","messenger","_c","$RefreshReg$"],"sources":["/home/adbuls/social-media-app-MERN-master/client/src/pages/messenger/Messenger.js"],"sourcesContent":["import Topbar from \"../../components/topbar/Topbar\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./messengerStyle\";\nimport ChatLeftPanel from \"../../components/chatLeftPanel/ChatLeftPanel\";\nimport CenterChatPanel from \"../../components/centerChatPanel/CenterChatPanel\";\nimport RightChatPanel from \"../../components/rightChatPanel/RightChatPanel\";\n\nfunction Messenger({ classes }) {\n    const [conversations, setConversations] = useState([]);\n    const [currentChat, setCurrentChat] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [arrivalMessage, setArrivalMessage] = useState(null);\n    const [onlineUsers, setOnlineUsers] = useState([]);\n    const [contact, setContact] = useState(null);\n    const { user } = useContext(AuthContext);\n    const socket = useRef();\n\n    useEffect(() => {\n        socket.current = io(\"ws://localhost:8900\");\n        socket.current.on(\"getMessage\", (data) => {\n            setArrivalMessage({\n                sender: data.senderId,\n                text: data.text,\n                createdAt: Date.now(),\n            });\n        });\n        console.log('connected....')\n    }, []);\n\n    useEffect(() => {\n        arrivalMessage &&\n            currentChat?.members.includes(arrivalMessage.sender) &&\n            setMessages((prev) => [...prev, arrivalMessage]);\n    }, [arrivalMessage, currentChat]);\n\n    // add user to an array of Online users\n    useEffect(() => {\n        socket.current.emit(\"addUser\", user._id);\n        socket.current.on(\"getUsers\", (users) => {\n            setOnlineUsers(\n                user.followings.filter((f) => users.some((u) => u.userId === f))\n            );\n        });\n    }, [user]);\n\n    // get all conversations and display them in the left panel\n    useEffect(() => {\n        const getConversations = async () => {\n            try {\n                const res = await axios.get(\"/conversations/\" + user._id);\n                setConversations(res.data);\n                console.log(res.data);\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        getConversations();\n    }, [user._id]);\n\n    // get the last message from each conversation\n    useEffect(() => {\n        const getLastMessages = () => {\n            try {\n                conversations.map(async (c) => {\n                    const res = await axios.get(\n                        \"/messages/last-message/\" + c._id\n                    );\n                    c.lastMessage = res.data;\n                });\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        getLastMessages();\n    }, [conversations]);\n\n    useEffect(() => {\n        const getMessages = async () => {\n            try {\n                const res = await axios.get(\"/messages/\" + currentChat?._id);\n                setMessages(res.data);\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        getMessages();\n    }, [currentChat]);\n\n    // get contact data\n    useEffect(() => {\n        if(currentChat) {\n            const friendId = currentChat.members.find(\n                (member) => member !== user._id\n            );\n    \n            const getContact = async () => {\n                try {\n                    const res = await axios.get(`/users?userId=${friendId}`);\n                    setContact(res.data);\n                } catch (err) {\n                    console.log(err);\n                }\n            };\n            getContact();\n        }\n    }, [user._id, currentChat]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const message = {\n            sender: user._id,\n            text: newMessage,\n            conversationId: currentChat._id,\n        };\n\n        const receiverId = currentChat.members.find(\n            (member) => member !== user._id\n        );\n\n        socket.current.emit(\"sendMessage\", {\n            senderId: user._id,\n            receiverId,\n            text: newMessage,\n        });\n\n        try {\n            const res = await axios.post(\"/messages\", message);\n            setMessages([...messages, res.data]);\n            setNewMessage(\"\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    \n\n    return (\n        <>\n            <Topbar />\n\t\t\t<div className={classes.messenger}>\n\t\t\t\t<ChatLeftPanel\n\t\t\t\t\tconversations={conversations}\n\t\t\t\t\tsetCurrentChat={setCurrentChat}\n\t\t\t\t\tuser={user}\n\t\t\t\t\tcurrentChat={currentChat}\n\t\t\t\t/>\n\t\t\t\t<CenterChatPanel\n\t\t\t\t\tcurrentChat={currentChat}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tsetNewMessage={setNewMessage}\n\t\t\t\t\tnewMessage={newMessage}\n\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\tuser={user}\n                    contact={contact}\n\t\t\t\t/>\n\t\t\t\t<RightChatPanel\n\t\t\t\t\tonlineUsers={onlineUsers}\n\t\t\t\t\tuserId={user._id}\n\t\t\t\t\tsetCurrentChat={setCurrentChat}\n                    contact={contact}\n\t\t\t\t/>\n\t\t\t</div>\n        </>\n    );\n}\n\nexport default withStyles(styles)(Messenger);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}